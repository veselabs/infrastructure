name: CI

on:
  pull_request:
    branches: [master]
  merge_group:
    types: [checks_requested]
  workflow_call:
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  id-token: write

jobs:
  start:
    name: Starting
    runs-on: ubuntu-latest
    outputs:
      start: ${{ steps.merge-queue-ci-skipper.outputs.skip-check == 'false' }}
    steps:
      - name: Check If Starting
        id: merge-queue-ci-skipper
        uses: cariad-tech/merge-queue-ci-skipper@main

  flake:
    name: Check Flake
    runs-on: ubuntu-latest
    needs: [start]
    if: needs.start.outputs.start == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Nix
        uses: ./.github/actions/setup-nix

      - name: Check
        run: nix flake check --impure --all-systems

      - name: Format
        run: nix fmt -- --ci

  validate:
    name: Validate Configuration
    strategy:
      matrix:
        environment: [bootstrap, organization]
    runs-on: ubuntu-latest
    needs: [start]
    if: needs.start.outputs.start == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: arn:aws:iam::519848832156:role/gha-infrastructure-read
          aws-region: eu-north-1

      - name: Setup Nix
        uses: ./.github/actions/setup-nix

      - name: Initialize Terraform
        working-directory: ./environments/${{ matrix.environment }}
        run: nix develop .#ci -c terraform init -lock-timeout=1m -backend=false

      - name: Validate Configuration
        working-directory: ./environments/${{ matrix.environment }}
        run: nix develop .#ci -c terraform validate
        env:
          GITHUB_APP_ID: ${{ secrets.GH_APP_ID }}
          GITHUB_APP_INSTALLATION_ID: ${{ secrets.GH_APP_INSTALLATION_ID }}
          GITHUB_APP_PEM_FILE: ${{ secrets.GH_APP_PEM_FILE }}

      - name: Validate Terraform Docs
        run: nix develop .#ci -c just check-docs ./environments/${{ matrix.environment }}

  plan:
    name: Create Plan
    strategy:
      matrix:
        environment: [bootstrap, organization]
    runs-on: ubuntu-latest
    needs: [validate]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: arn:aws:iam::519848832156:role/gha-infrastructure-read
          aws-region: eu-north-1

      - name: Setup Nix
        uses: ./.github/actions/setup-nix

      - name: Initialize Terraform
        working-directory: ./environments/${{ matrix.environment }}
        run: nix develop .#ci -c terraform init -lock-timeout=1m

      - name: Create Plan
        working-directory: ./environments/${{ matrix.environment }}
        run: nix develop .#ci -c terraform plan -lock-timeout=1m -out=./plan
        env:
          GITHUB_APP_ID: ${{ secrets.GH_APP_ID }}
          GITHUB_APP_INSTALLATION_ID: ${{ secrets.GH_APP_INSTALLATION_ID }}
          GITHUB_APP_PEM_FILE: ${{ secrets.GH_APP_PEM_FILE }}

      - name: Show Plan
        working-directory: ./environments/${{ matrix.environment }}
        run: nix develop .#ci -c terraform show ./plan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: plan-${{ matrix.environment }}-${{ github.sha }}
          path: ./environments/${{ matrix.environment }}/plan

  succeed:
    name: Succeed
    runs-on: ubuntu-latest
    needs:
      - flake
      - validate
      - plan
    steps: [{ run: "true" }]
