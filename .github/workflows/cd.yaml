name: CD

on:
  push:
    branches: [master]

permissions:
  actions: read
  contents: read
  id-token: write

jobs:
  plan:
    name: Show Plan
    strategy:
      matrix:
        environment: [organization, development]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v33

      - name: Cache Nix Store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          purge: true
          purge-prefixes: nix-${{ runner.os }}-
          purge-primary-key: never

      - name: Initialize Terraform
        working-directory: ./environments/${{ matrix.environment }}
        run: nix develop .#ci -c terraform init -backend=false

      - name: Download Plan Artifact
        uses: dawidd6/action-download-artifact@v11
        with:
          workflow_search: false
          ref: ${{ github.sha }}
          name: plan-${{ matrix.environment }}-${{ github.sha }}
          path: ./environments/${{ matrix.environment }}

      - name: Show Plan
        working-directory: ./environments/${{ matrix.environment }}
        run: nix develop .#ci -c terraform show ./plan

  apply:
    name: Apply Plan
    strategy:
      matrix:
        environment: [organization, development]
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}
    needs: [plan]
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: arn:aws:iam::519848832156:role/gha-infrastructure
          aws-region: eu-north-1

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v33

      - name: Cache Nix Store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          purge: true
          purge-prefixes: nix-${{ runner.os }}-
          purge-primary-key: never

      - name: Initialize Terraform
        working-directory: ./environments/${{ matrix.environment }}
        run: nix develop .#ci -c terraform init

      - name: Download Plan Artifact
        uses: dawidd6/action-download-artifact@v11
        with:
          ref: ${{ github.sha }}
          name: plan-${{ matrix.environment }}-${{ github.sha }}
          path: ./environments/${{ matrix.environment }}

      - name: Apply Plan
        working-directory: ./environments/${{ matrix.environment }}
        run: nix develop .#ci -c terraform apply -auto-approve ./plan
        env:
          GITHUB_APP_ID: ${{ secrets.GH_APP_ID }}
          GITHUB_APP_INSTALLATION_ID: ${{ secrets.GH_APP_INSTALLATION_ID }}
          GITHUB_APP_PEM_FILE: ${{ secrets.GH_APP_PEM_FILE }}
